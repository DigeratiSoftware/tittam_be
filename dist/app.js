"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createServer = void 0;
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const helmet_1 = __importDefault(require("helmet"));
const morgan_1 = __importDefault(require("morgan"));
const express_rate_limit_1 = __importDefault(require("express-rate-limit"));
const dotenv_1 = __importDefault(require("dotenv"));
const error_1 = require("./middleware/error");
const user_routes_1 = require("./routes/user.routes");
const scheme_routes_1 = require("./routes/scheme.routes");
const component_routes_1 = require("./routes/component.routes");
const zone_routes_1 = require("./routes/zone.routes");
const district_routes_1 = require("./routes/district.routes");
const townPanchayat_routes_1 = require("./routes/townPanchayat.routes");
const ward_routes_1 = require("./routes/ward.routes");
const field_routes_1 = require("./routes/field.routes");
dotenv_1.default.config();
const createServer = () => {
    const app = (0, express_1.default)();
    app.use((0, helmet_1.default)());
    app.use((0, cors_1.default)());
    app.use(express_1.default.json());
    app.use((0, morgan_1.default)('dev'));
    app.use((0, express_rate_limit_1.default)({ windowMs: 60 * 1000, max: 100, standardHeaders: true, legacyHeaders: false }));
    app.get('/health', (_req, res) => res.json({ status: 'ok' }));
    app.use('/api/v1/users', user_routes_1.userRouter);
    app.use('/api/v1/schemes', scheme_routes_1.schemeRouter);
    app.use('/api/v1/components', component_routes_1.componentRouter);
    app.use('/api/v1/zones', zone_routes_1.zoneRouter);
    app.use('/api/v1/districts', district_routes_1.districtRouter);
    app.use('/api/v1/town-panchayats', townPanchayat_routes_1.townPanchayatRouter);
    app.use('/api/v1/wards', ward_routes_1.wardRouter);
    app.use("/api/v1/fields", field_routes_1.fieldRouter);
    app.use(error_1.errorHandler);
    return app;
};
exports.createServer = createServer;
